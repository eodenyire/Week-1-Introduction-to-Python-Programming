# -*- coding: utf-8 -*-
"""Copy of [Guiding Notebook] Introduction to Python Programming: Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17goe4oo2vvqv6gxQWuQBuB6La-KWpFm2

# AfterWork Data Science: Python Basics for Data Science Project

## Problem Statement

Create a program that performs some computation using the python programming language.
Tigo Telcom provides a mobile subscription plan with 200 minutes of airtime and 200 text messages for $10 a month. Each additional minute of air time costs $.03, and other text messages cost $.001 each. The customer's bill is also subject to 14% VAT Tax. Write a python program that will read the no. of minutes and text messages used in a month, then displays the base charge, additional minutes (if any), other text messages (if any), the tax charged, and the total bill.
A few things to note:
* Your input should be in the form of a dictionary.
* Your output should be more like an SMS message.
* Display the charges in 2 decimal places.

## Solution
"""

#!/usr/bin/env python3
# Defining our dictionary
# ---
# We will create a dictionary of input data with the following keys: 
# minutes_used, minutes_included, texts_used, texts_included, 
# monthly_plan, costperminute, cost_per_sms, vat_tax.
# ---

mobile_sub = {'minutes_used': 200, 'minutes_included':200, 'texts_used':300, 'texts_included':200, 'cost_per_minute_airtime':0.03, 'total_cost':10, 'cost_per_sms':0.001, 'vat_tax':0.14}

def evaluateCharges(input_data):
    minutes_used = input_data['minutes_used']
    texts_used = input_data['texts_used']
    minutes_included = input_data['minutes_included']
    texts_included = input_data['texts_included']

    basecharge = 10

    if minutes_used > 200:
        additional_minutes = minutes_used - minutes_included
        basecharge = basecharge + (additional_minutes * 0.03)

    if texts_used > 200:
        additional_texts = texts_used - texts_included
        basecharge = basecharge + (additional_texts * 0.001)

    VAT_TAX = basecharge * 0.14
    basecharge += VAT_TAX

    final_charges = round(basecharge, 2)
    output_string = "Your final charges are {}".format(final_charges)
    return print(output_string)

if __name__ == '__main__':
    evaluateCharges(mobile_sub)